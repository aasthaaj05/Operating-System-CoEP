Create a branch in the git repo that you have cloned and work on the branch.

Add a dummy system call to xv6.

The system call should be named "hello".

The system call should print "hello world\n".

You need to add an application code that calls the system call.

Submission:

Submit a "patch" file, which is the output of "git diff eeb7b415dbcb12cc362d0783e41c3d1f44066b17" that is the diff with the topmost commit in the existing xv6 repo., showing all files that have been changed and added new.

Filename: hello.patch





diff --git a/Makefile b/Makefile
index 09d790c..906f9d3 100644
--- a/Makefile
+++ b/Makefile
@@ -181,6 +181,7 @@ UPROGS=\
 	_usertests\
 	_wc\
 	_zombie\
+	_tryhello\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
diff --git a/syscall.c b/syscall.c
index ee85261..1e5198e 100644
--- a/syscall.c
+++ b/syscall.c
@@ -103,6 +103,7 @@ extern int sys_unlink(void);
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
+extern int sys_hello(void);
 
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
@@ -126,6 +127,7 @@ static int (*syscalls[])(void) = {
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_hello]   sys_hello,
 };
 
 void
diff --git a/syscall.h b/syscall.h
index bc5f356..5f48d9b 100644
--- a/syscall.h
+++ b/syscall.h
@@ -20,3 +20,4 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_hello  22
diff --git a/sysfile.c b/sysfile.c
index bfe61b7..8f67f65 100644
--- a/sysfile.c
+++ b/sysfile.c
@@ -442,3 +442,8 @@ sys_pipe(void)
   fd[1] = fd1;
   return 0;
 }
+
+int sys_hello(void){
+	cprintf("hello\n");
+	return 0;
+}
diff --git a/user.h b/user.h
index 4f99c52..2f95ca5 100644
--- a/user.h
+++ b/user.h
@@ -23,6 +23,7 @@ int getpid(void);
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+int hello(void);
 
 // ulib.c
 int stat(const char*, struct stat*);
diff --git a/usys.S b/usys.S
index 8bfd8a1..0072273 100644
--- a/usys.S
+++ b/usys.S
@@ -29,3 +29,4 @@ SYSCALL(getpid)
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
+SYSCALL(hello)
